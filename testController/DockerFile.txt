# Stage 1: Build the application
FROM eclipse-temurin:17-jdk-jammy as builder

# Set working directory
WORKDIR /workspace/app

# Copy only the files needed for dependency resolution
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .

# Download dependencies (this layer gets cached)
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY src src

# Build the application (creates the JAR)
RUN ./mvnw package -DskipTests

#RUN mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)

# Stage 2: Runtime image
FROM eclipse-temurin:17-jre-jammy

# Add application user for security
RUN useradd -m myapp
USER myapp

WORKDIR /app

# Copy dependencies from builder
#COPY --from=builder --chown=myapp:myapp /workspace/app/target/dependency/BOOT-INF/lib /app/lib
#COPY --from=builder --chown=myapp:myapp /workspace/app/target/dependency/META-INF /app/META-INF
#COPY --from=builder --chown=myapp:myapp /workspace/app/target/dependency/BOOT-INF/classes /app
COPY --from=builder --chown=myapp:myapp /workspace/app/target/*.jar app.jar

# Set environment variables
#ENV SPRING_PROFILES_ACTIVE=prod
#ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

# Expose port
#EXPOSE 8080

# Entry point
#ENTRYPOINT ["sh", "-c", "java ${JAVA_OPTS} -cp app:app/lib/* com.abdulla.AWS.AWSApplication"]
ENTRYPOINT ["java", "-jar", "app.jar"]